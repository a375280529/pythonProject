from spyne.application import Application
from spyne.decorator import rpc
from spyne import ServiceBase, String
from spyne.protocol.soap import Soap11
from spyne.server.wsgi import WsgiApplication
from wsgiref.simple_server import make_server


class Test(ServiceBase):
    @rpc(String,  _returns=String)
    def get_data(self, post_data):
        return post_data if post_data else ""

    @rpc(String, _returns=String)
    def get_datadb(self, post_data):
        return '<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><urn:doServiceResponse xmlns:urn="webservice.frame.dcits.com"><return>&lt;?xml version="1.0" encoding="GBK"?&gt;&lt;service xmlns="http://www.chinatax.gov.cn/spec/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.chinatax.gov.cn/spec/"&gt;&lt;head&gt;&lt;tran_id&gt;yshd.service.cxssxx&lt;/tran_id&gt;&lt;channel_id&gt;&lt;/channel_id&gt;&lt;tran_seq&gt;lssztsxt95f0499eb2f711b8a4b3086c&lt;/tran_seq&gt;&lt;tran_date&gt;&lt;/tran_date&gt;&lt;tran_time&gt;&lt;/tran_time&gt;&lt;expand&gt;&lt;name&gt;identityType&lt;/name&gt;&lt;value&gt;SZZSYH&lt;/value&gt;&lt;/expand&gt;&lt;/head&gt;&lt;body&gt;&lt;![CDATA[&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;TaxSession&gt;&lt;RtnState&gt;&lt;RtnCode&gt;0000&lt;/RtnCode&gt;&lt;RtnMsg&gt;&lt;Code&gt;2000&lt;/Code&gt;&lt;Message&gt;成功&lt;/Message&gt;&lt;/RtnMsg&gt;&lt;/RtnState&gt;&lt;RtnCont&gtlt;/RtnCont&gt;&lt;/TaxSession&gt;]]&gt;&lt;/body&gt;&lt;/service&gt;</return></urn:doServiceResponse></soap:Body></soap:Envelope>'


app = Application([Test], 'http://schemas.xmlsoap.org/soap/envelope',in_protocol=Soap11(validator='lxml'), out_protocol=Soap11())
wsgi_app = WsgiApplication(app)


if __name__ == '__main__':
    server = make_server('0.0.0.0', 8080, wsgi_app)
    server.serve_forever()